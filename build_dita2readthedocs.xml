<?xml version="1.0" encoding="UTF-8"?>
<!--ant-->
<!--
  This file is part of the DITA ReadTheDocs project.
  See the accompanying LICENSE file for applicable licenses.
-->
<project
  name="fox.jason.readthedocs"
  xmlns:readthedocs="antlib:fox.jason.readthedocs"
>


	<target depends="build-init" name="mkdocs2dita.init">
		<!-- This defines the input file -->
		<dirname property="args.input.dir" file="${args.input}"/>
		<property name="mkdocs.file" value="${args.input.dir}/mkdocs.yml"/>

		<dita-ot-fail id="DOTA069F">
			<condition>
				<not>
					<available file="${mkdocs.file}" type="file"/>
				</not>
			</condition>
			<param name="1" value="${mkdocs.file}"/>
		</dita-ot-fail>
	</target>



	<target name="mkdocs2dita">
		<copy todir="${dita.output.dir}">
  			<fileset dir="${args.input.dir}/docs" excludes="mkdocs.yml"/>
		</copy>
		<readthedocs:create-mkdocs-ditamap
      file="${mkdocs.file}"
      dir="${dita.output.dir}"
    />
	</target>


	<!--
		Setting up ReadtheDocs processing. Sets up ANT variable overrides.
	-->
	<target name="readthedocs.init">
		<property name="build-step.copy-image" value="false"/>
		<property name="markdown.type" value="github"/>


		 <!-- begin to check and init css relevant properties -->
	
		<condition property="user.csspath.url">
			<or>
				<contains string="${args.csspath}" substring="http://"/>
				<contains string="${args.csspath}" substring="https://"/>
		  	</or>
		</condition>
			
		<condition property="user.csspath" value="" else="${args.csspath}/">
			<or>
				<not>
					<isset property="args.csspath"/>
				</not>
				<isabsolute path="${args.csspath}"/>
			</or>
		</condition>

		<condition
      property="user.css.real"
      value="${args.cssroot}${file.separator}${args.css}"
    >
			<isset property="args.cssroot"/>
		</condition>
		<property name="user.css.real" value="${args.css}"/>
		
		<local name="user.css.basename"/>
		<basename property="user.css.basename" file="${args.css}"/>
		<condition property="args.css.file" value="${user.css.basename}">
			<or>
				<available file="${user.css.real}" type="file"/>
				<isset property="user.csspath.url"/>
			</or>
		</condition>
		
		<!-- end to check and init css relevant parameters -->

		<dirname property="args.input.dir" file="${args.input}"/>
		<condition
      property="user.readthedocs.template"
      value="${args.input.dir}/${args.readthedocs.template}"
    >
			<and>
				<available file="${args.input.dir}/${args.readthedocs.template}" type="file"/>
				<isset property="args.readthedocs.template"/>
			</and>
		</condition>
		<condition
      property="user.readthedocs.template"
      value="${args.readthedocs.template}"
    >
			<and>
				<available file="${args.readthedocs.template}" type="file"/>
				<isset property="args.readthedocs.template"/>
			</and>
		</condition>

		<property name="args.readthedocs.theme" value="readthedocs"/>
		<property name="args.readthedocs.use.pages" value="no"/>
		<condition property="args.readthedocs.nav" value="pages:${line.separator}-  Home: index.md" else="nav:${line.separator}-  Home: index.md">
			<equals arg1="${args.readthedocs.use.pages}" arg2="yes"/>
		</condition>
	</target>

	<target name="readthedocs">
		<fileset id="dist.contents" dir="${dita.output.dir}">
			<include name="**/*.md"/>
		</fileset>

		<delete dir="${dita.output.dir}/docs"/>
		<readthedocs:create-readthedocs dir="${dita.output.dir}" file="index.md"/>
		<move todir="${dita.output.dir}/docs">  
			<fileset refid="dist.contents"/>  
		</move> 
		<copy todir="${dita.output.dir}/docs">  
			<ditafileset format="image" />
      <jobmapper/> 
		</copy> 

		<delete includeemptydirs="true">
			<fileset dir="${dita.output.dir}">
				<and>
					<size value="0"/>
					<type type="dir"/>
				</and>
			</fileset>
		</delete>
	</target>

	<target
    name="readthedocs.css"
    unless="user.csspath.url"
    description="Copy CSS files"
  >
		<condition property="user.copycss.yes">
			<and>
				<equals arg1="${args.copycss}" arg2="yes"/>
				<available file="${user.css.real}" type="file"/>
			</and>
		</condition>
		<property
      name="user.csspath.real"
      location="${dita.output.dir}/docs/${user.csspath}"
    />
		<mkdir dir="${user.csspath.real}"/>
		<!-- Copy user specify css file when required -->
		<antcall target="readthedocs.copy-css-user"/>
	</target>

	<target name="readthedocs.copy-css-user" if="user.copycss.yes">
		<copy file="${user.css.real}" todir="${user.csspath.real}"/>
	</target>
	
	<!--
		Ant target executed to create a readthedocs YAML file
	-->
	<target
    depends="readthedocs.init, dita2markdown, readthedocs, readthedocs.css"
    name="dita2readthedocs"
  />

	<!--
		Ant target executed to create a  Ditamap from a readthedocs YAML file
	-->
	<target depends="mkdocs2dita.init, mkdocs2dita" name="dita2mkdocs2dita"/>
</project>
